
push_buttons_leds_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000246  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000246  000002ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002c2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002f4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000330  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000929  00000000  00000000  00000390  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000694  00000000  00000000  00000cb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000397  00000000  00000000  0000134d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b4  00000000  00000000  000016e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004a7  00000000  00000000  00001798  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000181  00000000  00000000  00001c3f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00001dc0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e4       	ldi	r30, 0x46	; 70
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <main>
  7a:	0c 94 21 01 	jmp	0x242	; 0x242 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <_Z10set_port_bh>:
uint8_t led_count = 4;
uint8_t buttons[] = {0, 1};
uint8_t leds[]= {0, 1, 2, 3};

void set_port_b(uint8_t index){
	PORTB |= 1 << index;
  82:	98 b3       	in	r25, 0x18	; 24
  84:	21 e0       	ldi	r18, 0x01	; 1
  86:	30 e0       	ldi	r19, 0x00	; 0
  88:	02 c0       	rjmp	.+4      	; 0x8e <_Z10set_port_bh+0xc>
  8a:	22 0f       	add	r18, r18
  8c:	33 1f       	adc	r19, r19
  8e:	8a 95       	dec	r24
  90:	e2 f7       	brpl	.-8      	; 0x8a <_Z10set_port_bh+0x8>
  92:	29 2b       	or	r18, r25
  94:	28 bb       	out	0x18, r18	; 24
  96:	08 95       	ret

00000098 <_Z12reset_port_bh>:
}

void reset_port_b(uint8_t index){
	PORTB &= ~(1 << index);
  98:	98 b3       	in	r25, 0x18	; 24
  9a:	21 e0       	ldi	r18, 0x01	; 1
  9c:	30 e0       	ldi	r19, 0x00	; 0
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <_Z12reset_port_bh+0xc>
  a0:	22 0f       	add	r18, r18
  a2:	33 1f       	adc	r19, r19
  a4:	8a 95       	dec	r24
  a6:	e2 f7       	brpl	.-8      	; 0xa0 <_Z12reset_port_bh+0x8>
  a8:	20 95       	com	r18
  aa:	29 23       	and	r18, r25
  ac:	28 bb       	out	0x18, r18	; 24
  ae:	08 95       	ret

000000b0 <_Z13switch_port_bh>:
}

void switch_port_b(uint8_t index){
	PORTB ^= 1 << index;
  b0:	98 b3       	in	r25, 0x18	; 24
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	30 e0       	ldi	r19, 0x00	; 0
  b6:	02 c0       	rjmp	.+4      	; 0xbc <_Z13switch_port_bh+0xc>
  b8:	22 0f       	add	r18, r18
  ba:	33 1f       	adc	r19, r19
  bc:	8a 95       	dec	r24
  be:	e2 f7       	brpl	.-8      	; 0xb8 <_Z13switch_port_bh+0x8>
  c0:	29 27       	eor	r18, r25
  c2:	28 bb       	out	0x18, r18	; 24
  c4:	08 95       	ret

000000c6 <_Z11check_pin_ah>:
}

int check_pin_a(uint8_t index){
	return (PINA & (1 << index)) == 0;
  c6:	29 b3       	in	r18, 0x19	; 25
  c8:	30 e0       	ldi	r19, 0x00	; 0
  ca:	a9 01       	movw	r20, r18
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <_Z11check_pin_ah+0xc>
  ce:	55 95       	asr	r21
  d0:	47 95       	ror	r20
  d2:	8a 95       	dec	r24
  d4:	e2 f7       	brpl	.-8      	; 0xce <_Z11check_pin_ah+0x8>
  d6:	ca 01       	movw	r24, r20
  d8:	51 e0       	ldi	r21, 0x01	; 1
  da:	85 27       	eor	r24, r21
}
  dc:	81 70       	andi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	08 95       	ret

000000e2 <_Z17init_push_buttonsv>:

// DDRA INIT
void init_push_buttons(){
	for(uint8_t i = 0; i < button_count; i++)
  e2:	20 e0       	ldi	r18, 0x00	; 0
  e4:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <button_count>
  e8:	28 17       	cp	r18, r24
  ea:	68 f4       	brcc	.+26     	; 0x106 <_Z17init_push_buttonsv+0x24>
		DDRA |= 1 << i;
  ec:	3a b3       	in	r19, 0x1a	; 26
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	02 2e       	mov	r0, r18
  f4:	02 c0       	rjmp	.+4      	; 0xfa <_Z17init_push_buttonsv+0x18>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	0a 94       	dec	r0
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <_Z17init_push_buttonsv+0x14>
  fe:	83 2b       	or	r24, r19
 100:	8a bb       	out	0x1a, r24	; 26
	return (PINA & (1 << index)) == 0;
}

// DDRA INIT
void init_push_buttons(){
	for(uint8_t i = 0; i < button_count; i++)
 102:	2f 5f       	subi	r18, 0xFF	; 255
 104:	ef cf       	rjmp	.-34     	; 0xe4 <_Z17init_push_buttonsv+0x2>
 106:	08 95       	ret

00000108 <_Z9init_ledsv>:
		DDRA |= 1 << i;
}

// DDRB INIT
void init_leds(){
	for(uint8_t i = 0; i < led_count; i++)
 108:	20 e0       	ldi	r18, 0x00	; 0
 10a:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <led_count>
 10e:	28 17       	cp	r18, r24
 110:	68 f4       	brcc	.+26     	; 0x12c <_Z9init_ledsv+0x24>
		DDRB |= 1 << i;
 112:	37 b3       	in	r19, 0x17	; 23
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	02 2e       	mov	r0, r18
 11a:	02 c0       	rjmp	.+4      	; 0x120 <_Z9init_ledsv+0x18>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	0a 94       	dec	r0
 122:	e2 f7       	brpl	.-8      	; 0x11c <_Z9init_ledsv+0x14>
 124:	83 2b       	or	r24, r19
 126:	87 bb       	out	0x17, r24	; 23
		DDRA |= 1 << i;
}

// DDRB INIT
void init_leds(){
	for(uint8_t i = 0; i < led_count; i++)
 128:	2f 5f       	subi	r18, 0xFF	; 255
 12a:	ef cf       	rjmp	.-34     	; 0x10a <_Z9init_ledsv+0x2>
 12c:	08 95       	ret

0000012e <_Z20button_move_led_downh>:
		DDRB |= 1 << i;
}

void button_move_led_down(uint8_t led_index){
 12e:	cf 93       	push	r28
 130:	c8 2f       	mov	r28, r24
	// first button -> move down
	if(check_pin_a(buttons[DOWN_BUTTON]))
 132:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <buttons>
 136:	0e 94 63 00 	call	0xc6	; 0xc6 <_Z11check_pin_ah>
 13a:	89 2b       	or	r24, r25
 13c:	f9 f0       	breq	.+62     	; 0x17c <_Z20button_move_led_downh+0x4e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 13e:	8f ef       	ldi	r24, 0xFF	; 255
 140:	9f e8       	ldi	r25, 0x8F	; 143
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <_Z20button_move_led_downh+0x14>
 146:	00 c0       	rjmp	.+0      	; 0x148 <_Z20button_move_led_downh+0x1a>
 148:	00 00       	nop
		_delay_ms(DEBOUNCE_DELAY_MS);
		// switch off led
		// increment led index
		// switch on led at new index
		
		if(check_pin_a(buttons[DOWN_BUTTON])){
 14a:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <buttons>
 14e:	0e 94 63 00 	call	0xc6	; 0xc6 <_Z11check_pin_ah>
 152:	89 2b       	or	r24, r25
 154:	99 f0       	breq	.+38     	; 0x17c <_Z20button_move_led_downh+0x4e>
			while(check_pin_a(buttons[DOWN_BUTTON]));
 156:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <buttons>
 15a:	0e 94 63 00 	call	0xc6	; 0xc6 <_Z11check_pin_ah>
 15e:	89 2b       	or	r24, r25
 160:	d1 f7       	brne	.-12     	; 0x156 <_Z20button_move_led_downh+0x28>
			reset_port_b(led_index);
 162:	8c 2f       	mov	r24, r28
 164:	0e 94 4c 00 	call	0x98	; 0x98 <_Z12reset_port_bh>
			led_index = (led_index + 1) % led_count;
 168:	8c 2f       	mov	r24, r28
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	01 96       	adiw	r24, 0x01	; 1
 16e:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <led_count>
 172:	70 e0       	ldi	r23, 0x00	; 0
 174:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <__divmodhi4>
			set_port_b(led_index);
 178:	0e 94 41 00 	call	0x82	; 0x82 <_Z10set_port_bh>
		}
	}
}
 17c:	cf 91       	pop	r28
 17e:	08 95       	ret

00000180 <_Z18button_move_led_uph>:

void button_move_led_up(uint8_t led_index){
 180:	cf 93       	push	r28
 182:	c8 2f       	mov	r28, r24
	// second button -> move up
	if(check_pin_a(buttons[UP_BUTTON]))
 184:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <buttons+0x1>
 188:	0e 94 63 00 	call	0xc6	; 0xc6 <_Z11check_pin_ah>
 18c:	89 2b       	or	r24, r25
 18e:	01 f1       	breq	.+64     	; 0x1d0 <_Z18button_move_led_uph+0x50>
 190:	8f ef       	ldi	r24, 0xFF	; 255
 192:	9f e8       	ldi	r25, 0x8F	; 143
 194:	01 97       	sbiw	r24, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <_Z18button_move_led_uph+0x14>
 198:	00 c0       	rjmp	.+0      	; 0x19a <_Z18button_move_led_uph+0x1a>
 19a:	00 00       	nop
		_delay_ms(DEBOUNCE_DELAY_MS);
		// switch off led
		// decrement led index
		// switch on led at new index
		
		if(check_pin_a(buttons[UP_BUTTON])){
 19c:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <buttons+0x1>
 1a0:	0e 94 63 00 	call	0xc6	; 0xc6 <_Z11check_pin_ah>
 1a4:	89 2b       	or	r24, r25
 1a6:	a1 f0       	breq	.+40     	; 0x1d0 <_Z18button_move_led_uph+0x50>
			while(check_pin_a(buttons[UP_BUTTON]));
 1a8:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <buttons+0x1>
 1ac:	0e 94 63 00 	call	0xc6	; 0xc6 <_Z11check_pin_ah>
 1b0:	89 2b       	or	r24, r25
 1b2:	d1 f7       	brne	.-12     	; 0x1a8 <_Z18button_move_led_uph+0x28>
			reset_port_b(led_index);
 1b4:	8c 2f       	mov	r24, r28
 1b6:	0e 94 4c 00 	call	0x98	; 0x98 <_Z12reset_port_bh>
			led_index = (led_index + led_count - 1) % led_count;
 1ba:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <led_count>
 1be:	70 e0       	ldi	r23, 0x00	; 0
 1c0:	cb 01       	movw	r24, r22
 1c2:	8c 0f       	add	r24, r28
 1c4:	91 1d       	adc	r25, r1
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <__divmodhi4>
			set_port_b(led_index);
 1cc:	0e 94 41 00 	call	0x82	; 0x82 <_Z10set_port_bh>
		}
	}
}
 1d0:	cf 91       	pop	r28
 1d2:	08 95       	ret

000001d4 <main>:

int main(void){	
	init_leds();
 1d4:	0e 94 84 00 	call	0x108	; 0x108 <_Z9init_ledsv>
	init_push_buttons();
 1d8:	0e 94 71 00 	call	0xe2	; 0xe2 <_Z17init_push_buttonsv>
	
	uint8_t led_index = 0;
	switch_port_b(leds[led_index]);	
 1dc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1e0:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z13switch_port_bh>
	
    while(1){
		button_move_led_down(led_index);
 1e4:	80 e0       	ldi	r24, 0x00	; 0
 1e6:	0e 94 97 00 	call	0x12e	; 0x12e <_Z20button_move_led_downh>
		button_move_led_up(led_index);		
 1ea:	80 e0       	ldi	r24, 0x00	; 0
 1ec:	0e 94 c0 00 	call	0x180	; 0x180 <_Z18button_move_led_uph>
 1f0:	f9 cf       	rjmp	.-14     	; 0x1e4 <main+0x10>

000001f2 <__divmodhi4>:
 1f2:	97 fb       	bst	r25, 7
 1f4:	07 2e       	mov	r0, r23
 1f6:	16 f4       	brtc	.+4      	; 0x1fc <__divmodhi4+0xa>
 1f8:	00 94       	com	r0
 1fa:	07 d0       	rcall	.+14     	; 0x20a <__divmodhi4_neg1>
 1fc:	77 fd       	sbrc	r23, 7
 1fe:	09 d0       	rcall	.+18     	; 0x212 <__divmodhi4_neg2>
 200:	0e 94 0d 01 	call	0x21a	; 0x21a <__udivmodhi4>
 204:	07 fc       	sbrc	r0, 7
 206:	05 d0       	rcall	.+10     	; 0x212 <__divmodhi4_neg2>
 208:	3e f4       	brtc	.+14     	; 0x218 <__divmodhi4_exit>

0000020a <__divmodhi4_neg1>:
 20a:	90 95       	com	r25
 20c:	81 95       	neg	r24
 20e:	9f 4f       	sbci	r25, 0xFF	; 255
 210:	08 95       	ret

00000212 <__divmodhi4_neg2>:
 212:	70 95       	com	r23
 214:	61 95       	neg	r22
 216:	7f 4f       	sbci	r23, 0xFF	; 255

00000218 <__divmodhi4_exit>:
 218:	08 95       	ret

0000021a <__udivmodhi4>:
 21a:	aa 1b       	sub	r26, r26
 21c:	bb 1b       	sub	r27, r27
 21e:	51 e1       	ldi	r21, 0x11	; 17
 220:	07 c0       	rjmp	.+14     	; 0x230 <__udivmodhi4_ep>

00000222 <__udivmodhi4_loop>:
 222:	aa 1f       	adc	r26, r26
 224:	bb 1f       	adc	r27, r27
 226:	a6 17       	cp	r26, r22
 228:	b7 07       	cpc	r27, r23
 22a:	10 f0       	brcs	.+4      	; 0x230 <__udivmodhi4_ep>
 22c:	a6 1b       	sub	r26, r22
 22e:	b7 0b       	sbc	r27, r23

00000230 <__udivmodhi4_ep>:
 230:	88 1f       	adc	r24, r24
 232:	99 1f       	adc	r25, r25
 234:	5a 95       	dec	r21
 236:	a9 f7       	brne	.-22     	; 0x222 <__udivmodhi4_loop>
 238:	80 95       	com	r24
 23a:	90 95       	com	r25
 23c:	bc 01       	movw	r22, r24
 23e:	cd 01       	movw	r24, r26
 240:	08 95       	ret

00000242 <_exit>:
 242:	f8 94       	cli

00000244 <__stop_program>:
 244:	ff cf       	rjmp	.-2      	; 0x244 <__stop_program>
